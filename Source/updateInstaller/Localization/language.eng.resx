<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="applyAddRegistryKayAction_name" xml:space="preserve">
    <value>Create Registrykeys</value>
  </data>
  <data name="applyAddRegistryKeyAction_progress" xml:space="preserve">
    <value>Create Registrykey '{0}' in '{1}'</value>
  </data>
  <data name="applyAddRegistryKeyAction_rollback" xml:space="preserve">
    <value>Remove Registrykey '{0}'</value>
  </data>
  <data name="applyAddRegistryValueAction_name" xml:space="preserve">
    <value>Add Registrykey</value>
  </data>
  <data name="applyAddRegistryValueAction_progress" xml:space="preserve">
    <value>Applying Registryvalues...</value>
  </data>
  <data name="applyAddRegistryValueAction_rollback" xml:space="preserve">
    <value>Restoring Value '{0}'</value>
  </data>
  <data name="applyCleanupAction_name" xml:space="preserve">
    <value>Finalizing Updateprocess</value>
  </data>
  <data name="applyCleanupAction_progress" xml:space="preserve">
    <value>Delete File '{0}'...</value>
  </data>
  <data name="applyCloseProcessAction_name" xml:space="preserve">
    <value>Close Processes</value>
  </data>
  <data name="applyDeleteFileAction_exception" xml:space="preserve">
    <value>The File '{0}' could not be deleted.</value>
  </data>
  <data name="applyDeleteFileAction_name" xml:space="preserve">
    <value>Delete Files</value>
  </data>
  <data name="applyDeleteFileAction_progress" xml:space="preserve">
    <value>Delete File '{0}'...</value>
  </data>
  <data name="applyDeleteFileAction_rollback" xml:space="preserve">
    <value>Restoring File '{0}'...</value>
  </data>
  <data name="applyFileCopyAction_name" xml:space="preserve">
    <value>Copying Files</value>
  </data>
  <data name="applyFileCopyAction_progressStep_1" xml:space="preserve">
    <value>Saving File '{0}' ...</value>
  </data>
  <data name="applyFileCopyAction_progressStep_2" xml:space="preserve">
    <value>Extracting File '{0}' ...</value>
  </data>
  <data name="applyFileCopyAction_progressStep_3" xml:space="preserve">
    <value>Writing File '{0}' ...</value>
  </data>
  <data name="applyFileCopyAction_progressStep_4" xml:space="preserve">
    <value>Optimizing .NET Assembly...</value>
  </data>
  <data name="applyFileCopyAction_rollback" xml:space="preserve">
    <value>Restoring File {0} ...</value>
  </data>
  <data name="applyRemoveRegistryKeyAction_name" xml:space="preserve">
    <value>Delete Registrykeys</value>
  </data>
  <data name="applyRemoveRegistryKeyAction_progressStep_1" xml:space="preserve">
    <value>Saving Registrykeys ...</value>
  </data>
  <data name="applyRemoveRegistryKeyAction_progressStep_2" xml:space="preserve">
    <value>Saving Registryvalues ...</value>
  </data>
  <data name="applyRemoveRegistryKeyAction_progressStep_3" xml:space="preserve">
    <value>Deleting Registrykeys '{0}\\{1}'</value>
  </data>
  <data name="applyRemoveRegistryKeyAction_rollbackStep_1" xml:space="preserve">
    <value>Restoring Registrykey '{0}' ...</value>
  </data>
  <data name="applyRemoveRegistryKeyAction_rollbackStep_2" xml:space="preserve">
    <value>Restoring Registryvalue '{0}' ...</value>
  </data>
  <data name="applyRemoveRegistryValueAction_name" xml:space="preserve">
    <value>Remove Registryvalues</value>
  </data>
  <data name="applyRemoveRegistryValueAction_progress" xml:space="preserve">
    <value>Removing Registryvalue '{0}' ...</value>
  </data>
  <data name="applyRemoveRegistryValueAction_rollback" xml:space="preserve">
    <value>Restoring Registryvalue '{0}' ...</value>
  </data>
  <data name="applyRenameFileAction_name" xml:space="preserve">
    <value>Rename File</value>
  </data>
  <data name="applyRenameFileAction_progress" xml:space="preserve">
    <value>Renaming File '{0}' ...</value>
  </data>
  <data name="applyRenameFileAction_rollback" xml:space="preserve">
    <value>Restoring renamed File '{0}' ...</value>
  </data>
  <data name="applyStartProcessAction_exception" xml:space="preserve">
    <value>The digital signature of the File '{0}' could not be verified.</value>
  </data>
  <data name="applyStartProcessAction_name" xml:space="preserve">
    <value>Execute Process</value>
  </data>
  <data name="applyStartProcessAction_progress" xml:space="preserve">
    <value>Executing '{0}'</value>
  </data>
  <data name="applyStartServiceAction_name" xml:space="preserve">
    <value>Start Service</value>
  </data>
  <data name="applyStartServiceAction_startService" xml:space="preserve">
    <value>Starting Service '{0}'</value>
  </data>
  <data name="applyStartServiceAction_stopService" xml:space="preserve">
    <value>Stopping Service '{0}'</value>
  </data>
  <data name="applyStopServiceAction_name" xml:space="preserve">
    <value>Stop Service</value>
  </data>
  <data name="applyStopServiceAction_stopService" xml:space="preserve">
    <value>Stopping Service '{0}'</value>
  </data>
  <data name="applyUpdateManager_rollback" xml:space="preserve">
    <value>The Update is beeing cancelled</value>
  </data>
  <data name="applyUpdateRegistryAction_name" xml:space="preserve">
    <value>Updateing Registryversion</value>
  </data>
  <data name="applyUserInteractionAction_name" xml:space="preserve">
    <value>Waiting for Userresponse ...</value>
  </data>
  <data name="applyValidatePackageAction_exception" xml:space="preserve">
    <value>The digital signature of the Updatepackage '{0}' could not be validated.</value>
  </data>
  <data name="applyValidatePackageAction_name" xml:space="preserve">
    <value>Validate signature</value>
  </data>
  <data name="applyValidatePackageAction_progressStep_1" xml:space="preserve">
    <value>Validating Packagesignature ...</value>
  </data>
  <data name="applyValidatePackageAction_progressStep_2" xml:space="preserve">
    <value>Validation completed.</value>
  </data>
  <data name="fileAccessDialog_btnAbort_text" xml:space="preserve">
    <value>Cancel Update</value>
  </data>
  <data name="fileAccessDialog_btnRetry_text" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="fileAccessDialog_lblInfo_text" xml:space="preserve">
    <value>The updateInstaller is not able to overwrite the File '{0}'. What do you want to do?</value>
  </data>
  <data name="fileAccessDialog_lblTitle_text" xml:space="preserve">
    <value>Error while accessing a File</value>
  </data>
  <data name="general_button_cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="general_button_close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="general_button_no" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="general_button_ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="general_button_yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="MainForm_aclApply" xml:space="preserve">
    <value>Apply updates</value>
  </data>
  <data name="MainForm_aclDownload" xml:space="preserve">
    <value>Downloading updates (100% completed)</value>
  </data>
  <data name="mainForm_lblCurrentStatus_updateFailed" xml:space="preserve">
    <value>The Update has been interrupted. Click 'Close' to Exit the updateInstaller.</value>
  </data>
  <data name="mainForm_lblCurrentStatus_updateSuccessfull" xml:space="preserve">
    <value>The Update has been successfully applied. Click 'Close' to Exit the updateInstaller.</value>
  </data>
  <data name="mainForm_lblStatus_initialize" xml:space="preserve">
    <value>Initializing Update</value>
  </data>
  <data name="mainForm_lblStatus_updateFailed" xml:space="preserve">
    <value>Update cancelled</value>
  </data>
  <data name="mainForm_lblStatus_updateSuccessfull" xml:space="preserve">
    <value>Update successfull</value>
  </data>
  <data name="mainForm_rollback" xml:space="preserve">
    <value>The Update could not be continued because of following Error:{0}{1}</value>
  </data>
  <data name="mainForm_unhandledException_text" xml:space="preserve">
    <value>The Update could not be applied because of following Error:{0}{1}</value>
  </data>
  <data name="startServiceException_message" xml:space="preserve">
    <value>The Service '{0}' could not be started.</value>
  </data>
  <data name="stopServiceException_message" xml:space="preserve">
    <value>The Service '{0}' could not be stopped.</value>
  </data>
</root>